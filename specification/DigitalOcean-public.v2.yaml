openapi: 3.0.0

info:
  title: DigitalOcean API
  version: '2.0'
  description: >
    The DigitalOcean API allows you to manage Droplets and resources within the
    DigitalOcean cloud in a simple, programmatic way using conventional HTTP requests.
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
  contact:
    name: DigitalOcean API Team
    email: api-engineering@digitalocean.com
  termsOfService: 'https://www.digitalocean.com/legal/terms-of-service-agreement/'

servers:
  - url: 'https://api.digitalocean.com/v2'
    description: production

tags:
  - name: 1-Click Applications
    description: >
      1-Click applications are pre-built Droplet images or Kubernetes apps with software,
      features, and configuration details already set up for you. They can be found in the
      [DigitalOcean Marketplace](https://www.digitalocean.com/docs/marketplace).

  - name: Account
    description: Provides information about your current account.

  - name: Actions
    description: >
      Actions are records of events that have occurred on the resources in your account.
      These can be things like rebooting a Droplet, or transferring an image to a new region.


      An action object is created every time one of these actions is initiated. The action
      object contains information about the current status of the action, start and complete
      timestamps, and the associated resource type and ID.


      Every action that creates an action object is available through this endpoint. Completed
      actions are not removed from this list and are always available for querying.

  - name: Balance
    description: >-
      By sending requests to the `/v2/customers/my/balance` endpoint, you can
      retrieve the balance information for the requested customer account.

  - name: Billing History
    description: |
      Billing history is a record of billing events for your account.
      For example, entries may include events like payments made, invoices
      issued, or credits granted.

      To interact with the billing history for an account, you will generally
      send requests to the billing history endpoint at
      `/v2/customers/my/billing_history`.

  - name: Block Storage
    description: |
      [DigitalOcean Block Storage Volumes](https://www.digitalocean.com/docs/volumes/)
      provide expanded storage capacity for your Droplets and can be moved
      between Droplets within a specific region.
      Volumes function as raw block devices, meaning they appear to the
      operating system as locally attached storage which can be formatted using
      any file system supported by the OS. They may be created in sizes from
      1GiB to 16TiB.

      By sending requests to the /v2/volumes endpoint, you can list, create, or delete volumes as well as attach and detach them from Droplets

  - name: Droplet Actions
    description: |
      Droplet actions are tasks that can be executed on a Droplet. These can be
      things like rebooting, resizing, snapshotting, etc.

      Droplet action requests are generally targeted at one of the "actions"
      endpoints for a specific Droplet. The specific actions are usually
      initiated by sending a POST request with the action and arguments as
      parameters.

      Droplet action requests create a Droplet actions object, which can be used
      to get information about the status of an action. Creating a Droplet
      action is asynchronous: the HTTP call will return the action object before
      the action has finished processing on the Droplet. The current status of
      an action can be retrieved from either the Droplet actions endpoint or the
      global actions endpoint. If a Droplet action is uncompleted it may block
      the creation of a subsequent action for that Droplet, the locked attribute
      of the Droplet will be true and attempts to create a Droplet action will
      fail with a status of 422.

  - name: Droplets
    description: |
      A [Droplet](https://www.digitalocean.com/docs/droplets/) is a DigitalOcean
      virtual machine. By sending requests to the Droplet endpoint, you can
      list, create, or delete Droplets.

      Some of the attributes will have an object value. The `region` and `image`
      objects will all contain the standard attributes of their associated
      types. Find more information about each of these objects in their
      respective sections.

  - name: Images
    description: |
      A DigitalOcean [image](https://www.digitalocean.com/docs/images/) can be used to create a Droplet and may come in a number of flavors. Currently, there are five types of images: snapshots, backups, applications, distributions, and custom images.

      * [Snapshots](https://www.digitalocean.com/docs/images/snapshots/) provide a full copy of an existing Droplet instance taken on demand.
      * [Backups](https://www.digitalocean.com/docs/images/backups/) are similar to snapshots but are created automatically at regular intervals when enabled for a Droplet.
      * [Custom images](https://www.digitalocean.com/docs/images/custom-images/) are Linux-based virtual machine images (raw, qcow2, vhdx, vdi, and vmdk formats are supported) that you may upload for use on DigitalOcean.
      * Distributions are the public Linux distributions that are available to be used as a base to create Droplets.
      * Applications, or [1-Click Apps](https://www.digitalocean.com/docs/one-clicks/), are distributions pre-configured with additional software.

      To interact with images, you will generally send requests to the images endpoint at /v2/images.

  - name: Invoices
    description: |
      [Invoices](https://www.digitalocean.com/docs/accounts/billing/invoices/)
      are generated on the first of each month for every DigitalOcean
      customer. An invoice preview is generated daily, which can be accessed
      with the `preview` keyword in place of `$INVOICE_UUID`.

      To interact with invoices, you will generally send requests to the
      invoices endpoint at `/v2/customers/my/invoices`.

  - name: Kubernetes
    description: |
      [DigitalOcean Kubernetes](https://www.digitalocean.com/docs/kubernetes/)
      allows you to quickly deploy scalable and secure Kubernetes clusters. By
      sending requests to the `/v2/kubernetes/clusters` endpoint, you can list,
      create, or delete clusters as well as scale node pools up and down,
      recycle individual nodes, and retrieve the kubeconfig file for use with
      a cluster.

  - name: Regions
    description: Provides information about DigitalOcean data center regions.

  - name: Sizes
    description: >
      The sizes objects represent different packages of hardware resources that
      can be used for Droplets. When a Droplet is created, a size must be
      selected so that the correct resources can be allocated.


      Each size represents a plan that bundles together specific sets of
      resources. This includes the amount of RAM, the number of virtual CPUs,
      disk space, and transfer. The size object also includes the pricing
      details and the regions that the size is available in.

  - name: Snapshots
    description: |
      [Snapshots](https://www.digitalocean.com/docs/images/snapshots/) are saved
      instances of a Droplet or a block storage volume, which is reflected in
      the `resource_type` attribute. In order to avoid problems with compressing
      filesystems, each defines a `min_disk_size` attribute which is the minimum
      size of the Droplet or volume disk when creating a new resource from the
      saved snapshot.

      To interact with snapshots, you will generally send requests to the
      snapshots endpoint at `/v2/snapshots`.

  - name: SSH Keys
    description: Manage SSH keys available on your account.
  - name: Tags
    description: |
      A tag is a label that can be applied to a resource (currently Droplets, Images, Volumes, Volume Snapshots, and Database clusters)
      in order to better organize or facilitate the lookups and actions on it.

      Tags have two attributes: a user defined `name` attribute and an embedded `resources` attribute with information about resources that have been tagged.

paths:
  /1-clicks:
    get:
      $ref: 'resources/1-clicks/list.yml'

  /1-clicks/kubernetes:
    post:
      $ref: 'resources/1-clicks/install_kubernetes.yml'

  /account:
    get:
      $ref: 'resources/account/get_user_information.yml'

  /account/keys:
    get:
      $ref: 'resources/ssh_keys/list_all_keys.yml'

    post:
      $ref: 'resources/ssh_keys/create_a_new_key.yml'

  /account/keys/{ssh_key_identifier}:
    get:
      $ref: 'resources/ssh_keys/retrieve_an_existing_key.yml'

    patch:
      $ref: 'resources/ssh_keys/update_a_key.yml'

    delete:
      $ref: 'resources/ssh_keys/destroy_a_key.yml'

  /actions:
    get:
      $ref: 'resources/actions/list_all_actions.yml'

  /actions/{action_id}:
    get:
      $ref: 'resources/actions/retrieve_an_existing_action.yml'

  /customers/my/balance:
    get:
      $ref: 'resources/billing/get_customer_balance.yml'

  /customers/my/billing_history:
    get:
      $ref: 'resources/billing/list_billing_history.yml'

  /customers/my/invoices:
    get:
      $ref: 'resources/billing/list_invoices.yml'

  /customers/my/invoices/{invoice_uuid}:
    get:
      $ref: 'resources/billing/retrieve_invoice_by_uuid.yml'

  /customers/my/invoices/{invoice_uuid}/csv:
    get:
      $ref: 'resources/billing/retrieve_invoice_csv_by_uuid.yml'

  /customers/my/invoices/{invoice_uuid}/pdf:
    get:
      $ref: 'resources/billing/retrieve_invoice_pdf_by_uuid.yml'

  /customers/my/invoices/{invoice_uuid}/summary:
    get:
      $ref: 'resources/billing/retrieve_invoice_summary_by_uuid.yml'

  /droplets:
    get:
      $ref: 'resources/droplets/list_all_droplets.yml'

    post:
      $ref: 'resources/droplets/create_droplet.yml'

    delete:
      $ref: 'resources/droplets/destroy_droplets_by_tag.yml'

  /droplets/{droplet_id}:
    get:
      $ref: 'resources/droplets/retrieve_existing_droplet.yml'

    delete:
      $ref: 'resources/droplets/destroy_droplet.yml'

  /droplets/{droplet_id}/backups:
    get:
      $ref: 'resources/droplets/list_droplet_backups.yml'

  /droplets/{droplet_id}/snapshots:
    get:
      $ref: 'resources/droplets/list_droplet_snapshots.yml'

  /droplets/{droplet_id}/actions:
    get:
      $ref: 'resources/droplets/list_droplet_actions.yml'
    post:
      $ref: 'resources/droplets/initiate_droplet_action.yml'

  /droplets/actions:
    post:
      $ref: 'resources/droplets/initiate_droplet_action_by_tag.yml'

  /droplets/{droplet_id}/actions/{action_id}:
    get:
      $ref: 'resources/droplets/retrieve_existing_droplet_action.yml'

  /droplets/{droplet_id}/kernels:
    get:
      $ref: 'resources/droplets/list_droplet_kernels.yml'

  /droplets/{droplet_id}/neighbors:
    get:
      $ref: 'resources/droplets/list_droplet_neighbors.yml'

  /droplets/{droplet_id}/destroy_with_associated_resources:
    get:
      $ref: 'resources/droplets/list_associated_resources.yml'

  /droplets/{droplet_id}/destroy_with_associated_resources/selective:
    delete:
      $ref: 'resources/droplets/destroy_with_associated_resources_selective.yml'

  /droplets/{droplet_id}/destroy_with_associated_resources/dangerous:
    delete:
      $ref: 'resources/droplets/destroy_with_associated_resources_dangerous.yml'

  /droplets/{droplet_id}/destroy_with_associated_resources/status:
    get:
      $ref: 'resources/droplets/destroy_with_associated_resources_status.yml'

  /droplets/{droplet_id}/destroy_with_associated_resources/retry:
    post:
      $ref: 'resources/droplets/destroy_with_associated_resources_retry.yml'

  /images:
    get:
      $ref: 'resources/images/list_images.yml'
    post:
      $ref: 'resources/images/create_custom_image.yml'

  /images/{identifier}:
    get:
      $ref: 'resources/images/retrieve_existing_image.yml'
    put:
      $ref: 'resources/images/update_an_image.yml'
    delete:
      $ref: 'resources/images/delete_an_image.yml'

  /kubernetes/clusters:
    get:
      $ref: 'resources/kubernetes/list_all_clusters.yml'

    post:
      $ref: 'resources/kubernetes/create_cluster.yml'

  /regions:
    get:
      $ref: 'resources/regions/list_all_regions.yml'

  /reports/droplet_neighbors_ids:
    get:
      $ref: 'resources/droplets/list_all_droplet_neighbors_ids.yml'

  /sizes:
    get:
      $ref: 'resources/sizes/list_all_sizes.yml'

  /snapshots:
    get:
      $ref: 'resources/snapshots/list_all_snapshots.yml'

  /snapshots/{snapshot_id}:
    get:
      $ref: 'resources/snapshots/retrieve_existing_snapshots.yml'

    delete:
      $ref: 'resources/snapshots/delete_snapshot.yml'

  /tags:
    get:
      $ref: 'resources/tags/list_all_tags.yml'
    post:
      $ref: 'resources/tags/create_new_tag.yml'

  /tags/{tag_id}:
    get:
      $ref: 'resources/tags/get_tag.yml'
    delete:
      $ref: 'resources/tags/delete_tag.yml'

  /tags/{tag_id}/resources:
    post:
      $ref: 'resources/tags/tag_resource.yml'
    delete:
      $ref: 'resources/tags/untag_resource.yml'

  /volumes:
    get:
      $ref: 'resources/volumes/list_all_volumes.yml'
    post:
      $ref: 'resources/volumes/create_new_volume.yml'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
