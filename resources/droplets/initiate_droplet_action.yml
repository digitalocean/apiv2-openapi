operationId: initiate_droplet_action

summary: Initiate a Droplet Action

description: |
  Droplet actions are tasks that can be executed on a Droplet. These can be
  things like rebooting, resizing, snapshotting, etc.

  Droplet action requests are generally targeted at the "actions" endpoint for
  a specific Droplet. The specific actions are usually initiated by sending a
  POST request with the action and arguments as attributes in the request body.

  Droplet action requests create a Droplet actions object, which can be used to
  get information about the status of an action. Creating a Droplet action is
  asynchronous: the HTTP call will return the action object before the action
  has finished processing on the Droplet. The current status of an action can
  be retrieved from either the Droplet actions endpoint or the global actions
  endpoint. If a Droplet action is uncompleted it may block the creation of a
  subsequent action for that Droplet, the locked attribute of the Droplet will
  be true and attempts to create a Droplet action will fail with a status of
  422.

tags:
  - Droplets

parameters:
  - $ref: 'parameters.yml#/DropletId'

requestBody:
  description: |
    The `type` attribute set in the request body will specify the  action that
    will be taken on the Droplet. The supported action types are:

    | Action                      | Details |
    | --------------------------- | ----------- |
    | `enable_backups`            | Enables backups for a Droplet |
    | `disable_backups`           | Disables backups for a Droplet |
    | `reboot`                    | Reboots a Droplet. A `reboot` action is an attempt to reboot the Droplet in a graceful way, similar to using the `reboot` command from the console. |
    | `power_cycle`               | Power cycles a Droplet. A `powercycle` action is similar to pushing the reset button on a physical machine, it's similar to booting from scratch. |
    | `shutdown`                  | Shutsdown a Droplet. A shutdown action is an attempt to shutdown the Droplet in a graceful way, similar to using the `shutdown` command from the console. Since a `shutdown` command can fail, this action guarantees that the command is issued, not that it succeeds. The preferred way to turn off a Droplet is to attempt a shutdown, with a reasonable timeout, followed by a `power_off` action to ensure the Droplet is off. |
    | `power_off`                 | Powers off a Droplet. A `power_off` event is a hard shutdown and should only be used if the `shutdown` action is not successful. It is similar to cutting the power on a server and could lead to complications. |
    | `power_on`                  | Powers on a Droplet. |
    | `restore`                   | Restore a Droplet using a backup image. The image ID that is passed in must be a backup of the current Droplet instance. The operation will leave any embedded SSH keys intact. |
    | `password_reset`            | Resets the root password for a Droplet. A new password will be provided via email. It must be changed after first use. |
    | `resize`                    | Resizes a Droplet. Set the `size` attribute to a size slug. If a permanent resize with disk changes included is desired, set the `disk` attribute to `true`. |
    | `rebuild`                   | Rebuilds a Droplet from a new base image. Set the `image` attribute to an image ID or slug. |
    | `rename`                    | Renames a Droplet. |
    | `change_kernel`             | Changes a Droplet's kernel. Only applies to Droplets with externally managed kernels. All Droplets created after March 2017 use internal kernels by default. |
    | `enable_ipv6`               | Enables IPv6 for a Droplet. |
    | `enable_private_networking` | Enables private networking for a Droplet. *Note*: When VPC is enabled on your account, this will add the Droplet to your account's default VPC for the region. |
    | `snapshot`                  | Takes a snapshot of a Droplet. |

    Some actions will require additional attributes to be set as well.

  content:
    application/json:
      schema:
        oneOf:
          - $ref: 'models/droplet_actions.yml#/DropletActionType'
        discriminator:
          propertyName: type
          mapping:
            enable_backups: 'models/droplet_actions.yml#/DropletActionType'
            disable_backups: 'models/droplet_actions.yml#/DropletActionType'
            reboot: 'models/droplet_actions.yml#/DropletActionType'
            power_cycle: 'models/droplet_actions.yml#/DropletActionType'
            shutdown: 'models/droplet_actions.yml#/DropletActionType'
            power_off: 'models/droplet_actions.yml#/DropletActionType'
            power_on: 'models/droplet_actions.yml#/DropletActionType'
            password_reset: 'models/droplet_actions.yml#/DropletActionType'
            restore: 'models/droplet_actions.yml#/DropletActionRestore'
            resize: 'models/droplet_actions.yml#/DropletActionResize'
            rebuild: 'models/droplet_actions.yml#/DropletActionRebuild'
            rename: 'models/droplet_actions.yml#/DropletActionRename'
            change_kernel: 'models/droplet_actions.yml#/DropletActionChangeKernel'
            enable_ipv6: 'models/droplet_actions.yml#/DropletActionType'
            enable_private_networking: 'models/droplet_actions.yml#/DropletActionType'
            snapshot: 'models/droplet_actions.yml#/DropletActionSnapshot'

responses:
  '201':
    $ref: 'responses/droplet_action.yml'

  '401':
    $ref: '../../shared/responses/unauthorized.yml'

  '404':
    $ref: '../../shared/responses/not_found.yml'

  '500':
    $ref: '../../shared/responses/server_error.yml'

  default:
    $ref: '../../shared/responses/unexpected_error.yml'
